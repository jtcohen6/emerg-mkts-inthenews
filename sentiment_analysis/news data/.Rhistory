word.list <- "C:/Users/jtcohen6/Dropbox/School/Penn/2015C Fall/Grek 309 (Plutarch)/Words x3.txt"
lookup <- function(word,lang) {
word.study <- readLines(paste("http://www.perseus.tufts.edu/hopper/morph?l=",word,"&la=",lang,sep=""))
substring(paste(
gsub("\t\t","",
gsub("<em>[definition unavailable]</em>","",
word.study[grep("lemma_definition",word.study)+1],
fixed=T)),
collapse=" ; "),1,100) }
lookup.grk <- function(...) { lookup(...,lang="greek") }
lookup.ltn <- function(...) { lookup(...,lang="la") }
my.lookup <- function(my.words,lang) {
my.defs <- data.frame("WORD"=my.words,"DEFINITION"=0,stringsAsFactors=F)
for (i in 1:length(my.words)) {
my.defs[i,"DEFINITION"] <- lookup(my.words[i],lang) }
print(my.defs) }
my.lookup.grk <- function(...) { my.lookup(...,lang="greek") }
my.lookup.ltn <- function(...) { my.lookup(...,lang="la") }
getwd()
word.list <- "Words x3.txt"
translate <- function() { my.lookup.grk(readLines(word.list)) }
translate()
translate()
translate()
translate <- function() { my.lookup(readLines(word.list) }
translate <- function() { my.lookup(readLines(word.list)) }
word.list <- "Words x3.txt"; lang="greek"
translate()
translate <- function() { my.lookup(readLines(word.list), "greek" }
translate <- function() { my.lookup(readLines(word.list)), "greek" }
translate <- function() { my.lookup(readLines(word.list), "greek") }
word.list <- "Words x3.txt"; lang="greek"
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
()
translate()
()
()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
translate()
getwd()
translate()
lookup.grk(mhnin)
lookup.grk("mhnin")
lookup.ltn("agricolae")
lookup.ltn("agricola")
translate <- function() { write.table(my.lookup(readLines(word.list), "greek"), file = "Word Table") }
word.list <- "Words x3.txt"
translate()
translate <- function() { write.csv(my.lookup(readLines(word.list), "greek"), file = "Word Table") }
word.list <- "Words x3.txt"
translate()
translate <- function() { write.csv(my.lookup(readLines(word.list), "greek"), file = "WordTable.csv") }
word.list <- "Words x3.txt"
translate()
word.list
paste("trans.",word.list,collapse="")
paste("trans.",word.list,sep="")
translate("WordTable.csv",,"greek")
translate <- function(old,new=paste("transl.",word.list,sep=""),lang) {
write.csv(my.lookup(read.csv(old),lang), new) }
translate <- function(old,new=paste("transl.",word.list,sep=""),lang) {
write.csv(my.lookup(read.csv(old),lang), new) }
translate("WordTable.csv",,"greek")
translate <- function(old,new=paste("transl.",old,sep=""),lang) {
write.csv(my.lookup(read.csv(old),lang), new) }
translate("WordTable.csv",,"greek")
read.csv("WordTable.csv")
read.csv("WordTable.csv")
read.csv("WordTable.csv")[1]
read.csv("WordTable.csv")[,1]
translate <- function(old,new=paste("transl.",old,sep=""),lang) {
write.csv(my.lookup(read.csv(old)[,1],stringsAsFactors=F),lang), new) }
word.list <- read.csv(old,stringsAsFactors=F)[,1]
word.list <- read.csv("WordTable.csv",stringsAsFactors=F)[,1]
word.list
translate <- function(old,new=paste("transl.",old,sep=""),lang) {
word.list <- read.csv(old,stringsAsFactors=F)[,1]
write.csv(my.lookup(word.list,lang), new) }
translate("WordTable.csv",,"greek")
translate <- function(old,lang,new=paste("transl.",old,sep="")) {
# ERROR: Defintion of function 'function' not found
translate <- function(old,lang,new=paste("transl.",old,sep="")) {
word.list <- read.csv(old,stringsAsFactors=F)[,1]
write.csv(my.lookup(word.list,lang), new) }
translate <- function(old,lang,new=paste("transl.",old,sep="")) {
word.list <- read.csv(old,stringsAsFactors=F)[,1]
write.csv(my.lookup(word.list,lang), new) }
translate("WordTable.csv","greek")
translate("WordTable.csv","greek")
date <- "12/9/94"
date.spl <- strsplit(date,"/")
date.spl
date <- "12/9/94" #date for value of S&P Index (INX)
date.spl <- strsplit(date,"/")
month <- date.spl[1]
day <- date.spl[2]
year <- date.spl[3]
paste("https://www.google.com/finance/historical?cid=626307&startdate=Nov+16+2007&enddate=",month,"+",day,"+",year,"&num=1")
month <- date.spl[1]
month
date.spl <- strsplit(date,"/")
month <- date.spl[[1]]
day <- date.spl[[2]]
year <- date.spl[[3]]
month <- date.spl[[1]]
month
month <- date.spl$[1]
date.spl <- strsplit(date,"/")[[1]]
date.spl
month <- date.spl[1]
day <- date.spl[2]
year <- date.spl[3]
month
day
year
input <- "12/9/94" #date for value of S&P Index (INX)
input <- "12/9/94" #date for value of S&P Index (INX)
input
strsplit(input,"/")[[1]]
with(strsplit,1)
with(strsplit(input,"/")[[1]],[1])
with(strsplit(input,"/")[[1]],1)
strsplit(input,"/")$1
strsplit(input,"/")$
[1]
date <- function(input="11/16/2007") {
date.split <- strsplit(input,"/")[[1]]
month <- month.name(date.spl[1])
day <- date.spl[2]
year <- date.spl[3] }
date()
date <- function(input="11/16/2007") {
date.split <- strsplit(input,"/")[[1]]
month <- month.name[date.spl[1]]
day <- date.spl[2]
year <- date.spl[3] }
date()
date()
month <- "0"
day <- "0"
year <- "0"
input <- "12/9/94" #date for value of S&P Index (INX)
date <- function(input="11/16/2007") {
date.split <- strsplit(input,"/")[[1]]
month <- month.name[date.spl[1]]
day <- date.spl[2]
year <- date.spl[3] }
date()
print(month,day,year)
print(month)
date(12/5/67)
date("12/5/67")
month
input <- "12/9/94" #date for value of S&P Index (INX)
INX <- function(date="11/16/2007") {
date.split <- strsplit(input,"/")[[1]]
month <- month.name[date.spl[1]]
day <- date.spl[2]
year <- date.spl[3]
URL <- paste("https://www.google.com/finance/historical?cid=626307&startdate=Nov+16+2007&enddate=",month,"+",day,"+",year,"&num=1")
print(URL) }
INX(11/3/09)
INX(11/3/2009)
input <- "12/9/94" #date for value of S&P Index (INX)
INX <- function(date="11/16/2007") {
date.split <- strsplit(date,"/")[[1]]
month <- month.name[date.spl[1]]
day <- date.spl[2]
year <- date.spl[3]
URL <- paste("https://www.google.com/finance/historical?cid=626307&startdate=Nov+16+2007&enddate=",month,"+",day,"+",year,"&num=1")
print(URL) }
INX(11/3/2009)
INX("11/3/2009")
input <- "12/9/94" #date for value of S&P Index (INX)
INX <- function(date=11/16/2007) {
date.split <- strsplit(as.character(date),"/")[[1]]
month <- month.name[date.spl[1]]
day <- date.spl[2]
year <- date.spl[3]
URL <- paste("https://www.google.com/finance/historical?cid=626307&startdate=Nov+16+2007&enddate=",month,"+",day,"+",year,"&num=1")
print(URL) }
INX(11/4/2009)
month.name
11/15/13
INX <- function(date=11/16/2007) {
date.split <- strsplit(as.character(date),"/")[[1]]
month <- month.name[as.number(date.spl[1])]
day <- date.spl[2]
year <- date.spl[3]
URL <- paste("https://www.google.com/finance/historical?cid=626307&startdate=Nov+16+2007&enddate=",month,"+",day,"+",year,"&num=1")
print(URL) }
INX(11/4/2009)
INX <- function(date=11/16/2007) {
date.split <- strsplit(as.character(date),"/")[[1]]
month <- month.name[as.numeric(date.spl[1])]
day <- date.spl[2]
year <- date.spl[3]
URL <- paste("https://www.google.com/finance/historical?cid=626307&startdate=Nov+16+2007&enddate=",month,"+",day,"+",year,"&num=1")
print(URL) }
INX(11/4/2009)
INX <- function(date=11/16/2007) {
date.split <- strsplit(as.character(date),"/")[[1]]
month <- month.name[as.numeric(date.spl[1])]
day <- date.spl[2]
INX <- function(date=11/16/2007) {
date.spl <- strsplit(as.character(date),"/")[[1]]
month <- month.name[as.numeric(date.spl[1])]
day <- date.spl[2]
year <- date.spl[3]
URL <- paste("https://www.google.com/finance/historical?cid=626307&startdate=Nov+16+2007&enddate=",month,"+",day,"+",year,"&num=1",sep="")
print(URL) }
INX(11/15/13)
INX(11/15/2013)
date.spl <- strsplit(as.character(11/3/2009),"/")[[1]]
date.spl
as.character(11/3/2009)
INX <- function(date="11/16/2007") {
date.spl <- strsplit(date,"/")[[1]]
month <- month.name[as.numeric(date.spl[1])]
day <- date.spl[2]
year <- date.spl[3]
URL <- paste("https://www.google.com/finance/historical?cid=626307&startdate=Nov+16+2007&enddate=",month,"+",day,"+",year,"&num=1",sep="")
print(URL) }
INX(11/15/2013)
INX <- function(date="11/16/2007") {
date.spl <- strsplit(date,"/")[[1]]
month <- month.name[as.numeric(date.spl[1])]
day <- date.spl[2]
year <- date.spl[3]
URL <- paste("https://www.google.com/finance/historical?cid=626307&startdate=Nov+16+2007&enddate=",month,"+",day,"+",year,"&num=1",sep="")
print(URL) }
INX("11/15/2013")
hist(ftimes.tbl$date)
ftimes.tbl.basic <- ftimes.tbl # backup basic table (just in case!)
## NEWS ANALYTICS ## FINANCIAL TIMES ##
## PennApps XIII, Jeremy & Raghav (& Gus)
rm(list=ls())
dir <- "C:\\Users\\jtcohen6\\Documents\\buckfitches\\news data"
setwd(dir)
ftimes21494 <- readLines("ftimes21494.txt") # dataset
n <- 21494 # number of articles
search_ftimes <- function(start,end) { ftimes20189[start:end] } # search function
art_end <- grep("Document FT|Document EP|Document AI",ftimes20189) # ending line
art_start <- c(15,art_end[-n]+1) # starting line, based on ending line
ftimes_art <- function(art_num) { search_ftimes( art_start[art_num], art_end[art_num] ) }
## instantiate table, with article number (ID), starting line, ending line
ftimes.tbl <- data.frame("ART_NUM"=c(1:n),"ART_START"=art_start[1:n],
"ART_END"=art_end[1:n],"WORDS"=0,"DATE"=0)
## get word count and date (next line) for each article and add to table
for (i in 1:n) {
art <- ftimes_art(i)
WC_line <- grep("^WC \t", art)
ftimes.tbl[i,"WORDS"] <- as.numeric(gsub("[^[:digit:]]","",art[WC_line]))
date <- strsplit(gsub("PD \t","",art[WC_line + 1])," ")[[1]]
ftimes.tbl[i,"DATE"] <- as.Date(
paste(grep(date[2],month.name),"/",date[1],"/",date[3],sep=""),"%m/%d/%y")
}
str(ftimes.tbl) # check my work
ftimes.tbl.basic <- ftimes.tbl # backup basic table (just in case!)
## the search engine
findings <- rep(0,times=n) # initialize temp vector
keyword <- function(string) {
for (i in 1:n) { findings[i] <- sum(grepl(string, ftimes_art(i))) }
new.col <- ncol(ftimes.tbl)+1
ftimes.tbl[,new.col] <<- findings
names(ftimes.tbl)[new.col] <<- string
str(ftimes.tbl) }
View(ftimes.tbl)
keyword("Russia")
keyword("China")
keyword("South Korea")
keyword("oil")
keyword("Middle East")
keyword("Bangladesh")
ftimes.tbl <- ftimes.tbl.basic # reset as needed
hist(ftimes.tbl$date)
## NEWS ANALYTICS ## FINANCIAL TIMES ##
## PennApps XIII, Jeremy & Raghav (& Gus)
rm(list=ls())
dir <- "C:\\Users\\jtcohen6\\Documents\\buckfitches\\news data"
setwd(dir)
ftimes21494 <- readLines("ftimes21494.txt") # dataset
n <- 21494 # number of articles
search_ftimes <- function(start,end) { ftimes20189[start:end] } # search function
art_end <- grep("Document FT|Document EP|Document AI",ftimes21494) # ending line
art_start <- c(15,art_end[-n]+1) # starting line, based on ending line
ftimes_art <- function(art_num) { search_ftimes( art_start[art_num], art_end[art_num] ) }
## instantiate table, with article number (ID), starting line, ending line
ftimes.tbl <- data.frame("ART_NUM"=c(1:n),"ART_START"=art_start[1:n],
"ART_END"=art_end[1:n],"WORDS"=0,"DATE"=0)
## get word count and date (next line) for each article and add to table
for (i in 1:n) {
art <- ftimes_art(i)
WC_line <- grep("^WC \t", art)
ftimes.tbl[i,"WORDS"] <- as.numeric(gsub("[^[:digit:]]","",art[WC_line]))
date <- strsplit(gsub("PD \t","",art[WC_line + 1])," ")[[1]]
ftimes.tbl[i,"DATE"] <- as.Date(
paste(grep(date[2],month.name),"/",date[1],"/",date[3],sep=""),"%m/%d/%y")
}
str(ftimes.tbl) # check my work
ftimes.tbl.basic <- ftimes.tbl # backup basic table (just in case!)
## the search engine
findings <- rep(0,times=n) # initialize temp vector
keyword <- function(string) {
for (i in 1:n) { findings[i] <- sum(grepl(string, ftimes_art(i))) }
new.col <- ncol(ftimes.tbl)+1
ftimes.tbl[,new.col] <<- findings
names(ftimes.tbl)[new.col] <<- string
str(ftimes.tbl) }
View(ftimes.tbl)
keyword("Russia")
keyword("China")
keyword("South Korea")
keyword("oil")
keyword("Middle East")
keyword("Bangladesh")
ftimes.tbl <- ftimes.tbl.basic # reset as needed
hist(ftimes.tbl$date)
ftimes21494 <- readLines("ftimes21494.txt") # dataset
## NEWS ANALYTICS ## FINANCIAL TIMES ##
## PennApps XIII, Jeremy & Raghav (& Gus)
rm(list=ls())
dir <- "C:\\Users\\jtcohen6\\Documents\\buckfitches\\news data"
setwd(dir)
ftimes21494 <- readLines("ftimes21494.txt") # dataset
n <- 21494 # number of articles
search_ftimes <- function(start,end) { ftimes21494[start:end] } # search function
art_end <- grep("Document FT|Document EP|Document AI",ftimes21494) # ending line
art_start <- c(15,art_end[-n]+1) # starting line, based on ending line
ftimes_art <- function(art_num) { search_ftimes( art_start[art_num], art_end[art_num] ) }
## instantiate table, with article number (ID), starting line, ending line
ftimes.tbl <- data.frame("ART_NUM"=c(1:n),"ART_START"=art_start[1:n],
"ART_END"=art_end[1:n],"WORDS"=0,"DATE"=0)
## get word count and date (next line) for each article and add to table
for (i in 1:n) {
art <- ftimes_art(i)
WC_line <- grep("^WC \t", art)
ftimes.tbl[i,"WORDS"] <- as.numeric(gsub("[^[:digit:]]","",art[WC_line]))
date <- strsplit(gsub("PD \t","",art[WC_line + 1])," ")[[1]]
ftimes.tbl[i,"DATE"] <- as.Date(
paste(grep(date[2],month.name),"/",date[1],"/",date[3],sep=""),"%m/%d/%y")
}
str(ftimes.tbl) # check my work
ftimes.tbl.basic <- ftimes.tbl # backup basic table (just in case!)
## the search engine
findings <- rep(0,times=n) # initialize temp vector
keyword <- function(string) {
for (i in 1:n) { findings[i] <- sum(grepl(string, ftimes_art(i))) }
new.col <- ncol(ftimes.tbl)+1
ftimes.tbl[,new.col] <<- findings
names(ftimes.tbl)[new.col] <<- string
str(ftimes.tbl) }
View(ftimes.tbl)
keyword("Russia")
keyword("China")
keyword("South Korea")
keyword("oil")
keyword("Middle East")
keyword("Bangladesh")
ftimes.tbl <- ftimes.tbl.basic # reset as needed
hist(ftimes.tbl$date)
plot(ftimes.tbl$ART_NUM,ftimes.tbl$DATES)
ftimes.tbl$ART_NUM
ftimes.tbl$DATE
plot(ftimes.tbl$ART_NUM,ftimes.tbl$DATE)
q()
